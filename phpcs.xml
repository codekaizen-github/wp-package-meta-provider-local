<?xml version="1.0"?>
<ruleset name="WordPress PSR-4 Standards">
    <description>WordPress Coding Standards with PSR-4 autoloader compatibility</description>

    <!-- Include WordPress Coding Standards -->
    <rule ref="WordPress">
        <!-- Exclude rules that conflict with PSR-4 autoloading -->
        <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
        <exclude name="WordPress.Files.FileName.InvalidClassFileName" />

        <!-- Allow short array syntax -->
        <exclude name="Universal.Arrays.DisallowShortArraySyntax.Found" />

        <!-- Allow less strict interpolated variable naming -->
        <exclude name="WordPress.NamingConventions.ValidVariableName.InterpolatedVariableNotSnakeCase" />
    </rule>

    <!-- Add PSR-4 compatible rules -->
    <rule ref="PSR1.Classes.ClassDeclaration"/>
    <rule ref="PSR2.Classes.PropertyDeclaration"/>

    <!-- Paths to check -->
    <file>./src</file>
    <file>./tests</file>

    <!-- Exclude vendor directory and test fixtures -->
    <exclude-pattern>/vendor/</exclude-pattern>
    <exclude-pattern>/tests/Fixture/</exclude-pattern>

    <!-- Configure for tabs -->
    <arg name="tab-width" value="4"/>

    <!-- Show progress, show sniff codes in report -->
    <arg value="ps"/>

    <!-- Allow PSR-4 style variable/method names -->
    <rule ref="WordPress.NamingConventions.ValidVariableName">
        <exclude name="WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase"/>
    </rule>

    <!-- Allow PSR-4 style method names -->
    <rule ref="WordPress.NamingConventions.ValidFunctionName">
        <exclude name="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid"/>
    </rule>
</ruleset>
